pipeline {
    agent any
    
    stages {
        stage('Build') {
            steps {
                script {
                    echo 'Building the code using Maven'
                    echo 'mvn clean package'
                }
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                script {
                    echo 'Running unit tests'
                    echo 'mvn'
                    
                    echo 'Running integration tests'
                    echo 'newman run my-collection.json'
                }
            }
            post {
                success {
                    emailext subject: 'Unit and Integration Tests Success',
                              body: 'Unit and integration tests have passed successfully',
                              to: 'rehman.abdur2001@gmail.com',
                              attachmentsPattern: 'jenkinstool.log'
                }
                failure {
                    emailext subject: 'Unit and Integration Tests Failure',
                              body: 'Unit and integration tests have failed',
                              to: 'rehman.abdur2001@gmail.com',
                              attachmentsPattern: 'jenkinstool.log'
                }
            }
        }
        stage('Code Analysis') {
            steps {
                script {
                    echo 'Integrating code analysis tool to analyze code quality'
                    echo 'sonar-scanner'
                }
            }
        }
        stage('Security Scan') {
            steps {
                script {
                    echo 'Performing security scan on code'
                    echo 'mvn dependency-check:check'
                }
            }
            post {
                success {
                    emailext subject: 'Security Scan Success',
                              body: 'Security scan has passed successfully',
                              to: 'rehman.abdur2001@gmail.com',
                              attachmentsPattern: 'jenkinstool.log'
                }
                failure {
                    emailext subject: 'Security Scan Failure',
                              body: 'Security scan has failed',
                              to: 'rehman.abdur2001@gmail.com',
                              attachmentsPattern: 'jenkinstool.log'
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                script {
                    echo 'Deploying application to staging server'
                    echo 'aws deploy create-deployment --application-name MyApp --deployment-group-name Staging --s3-location bucket=my-bucket,key=my-app.zip,bundleType=zip'
                }
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                script {
                    echo 'Running integration tests on staging environment'
                    echo 'selenium-runner --config=my-config.json'
                    echo 'Application successfulness'
                    echo 'Application successful again'
                }
            }
        }
        stage('Deploy to Production') {
            steps {
                script {
                    echo 'Deploying application to production server'
                    def deployOutput = sh(script: 'aws deploy create-deployment --application-name MyApp --deployment-group-name Production --s3-location bucket=my-bucket,key=my-app.zip,bundleType=zip', returnStdout: true)
                    writeFile file: 'deployment_log.txt', text: deployOutput
                }
            }
        }
    }
}
